#include <LiquidCrystal.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <DHT.h>
#define heart 13 
const int rs = 8, en = 9, d4 =10, d5 = 11, d6 = 12, d7 = 13;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);
#include <Wire.h>
#include "MAX30100_PulseOximeter.h"
#define REPORTING_PERIOD_MS 1000
// Timer variables
unsigned long lastTime = 0;
unsigned long timerDelay = 30000;
#define Type DHT11
int DHT11PIN = 5;
DHT HT(DHT11PIN, Type);
float Humidity;
float tempC;
int data=A0;//heartbeat sensor
int count=0;
unsigned long temp=0;
#include <Adafruit_Sensor.h>
#include <Adafruit_ADXL345_U.h>
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified();
float BPM, SpO2;
char mystr[20];
PulseOximeter pox;
uint32_t tsLastReport = 0;
char ch;
int sw=2;
int relay=3;
int buzzer=4;
void Init_spo2();

void onBeatDetected()
{
 Serial.println("Beat Detected!");
}
void setup() 
{
 pinMode(data,INPUT);
 pinMode(sw,INPUT_PULLUP);
 pinMode(buzzer,OUTPUT);
 pinMode(relay,OUTPUT);
 digitalWrite(buzzer,LOW);
 digitalWrite(relay,LOW);
 Serial.begin(9600); //Initialize serial
// Serial1.begin(9600);
lcd.begin(16, 2);
 pinMode(DHT11PIN, INPUT);
 HT.begin();
 lcd.clear();
 lcd.setCursor(0,0);
 lcd.print("SOLDIER HEALTH");
 lcd.setCursor(0,1);
 lcd.print("MONITORING..");
 delay(1000);
 Serial.print("Initializing pulse oximeter..");
 if (!pox.begin()) {
 Serial.println("FAILED");
 for (;;);
 } else { 
 Serial.println("SUCCESS");
 pox.setOnBeatDetectedCallback(onBeatDetected);
 }
 if(!accel.begin())
 {
 Serial.println("No valid sensor found");
 while(1);
 }
 pox.setIRLedCurrent(MAX30100_LED_CURR_7_6MA);
 attachInterrupt(digitalPinToInterrupt(sw), Emergency, FALLING);
 }
void Emergency()
{
 if(digitalRead(sw)==LOW)
 {
 Serial.println("$EMERGENCY#");
 lcd.clear();
 lcd.print("Emergency..");
 digitalWrite(buzzer,HIGH);
 delay(1000);
 digitalWrite(buzzer,LOW);
 }
}
void Init_spo2()
{
Serial.print("Initializing pulse oximeter..");
 if (!pox.begin()) {
 Serial.println("FAILED");
 for (;;);
 } else {
 Serial.println("SUCCESS");
 pox.setOnBeatDetectedCallback(onBeatDetected);
 }
 pox.setIRLedCurrent(MAX30100_LED_CURR_7_6MA);
 }
void loop() {
 int i=0;
 while(i<10000)
 {
 pox.update();
// BPM = pox.getHeartRate();
 SpO2 = pox.getSpO2();
 if (millis() - tsLastReport > REPORTING_PERIOD_MS)
 {
// 
// Serial.print("HB: ");
// Serial.println(BPM);
 Serial.print("SpO2: ");
 Serial.print(SpO2);
 Serial.println("%");
 lcd.clear();
 lcd.setCursor(0,0);
 lcd.print("Spo2:");
 lcd.print(SpO2); 
 lcd.print("%");
 Serial.println("*********************************");
 Serial.println();
 tsLastReport = millis();
 }
 // delay(500);
 i++;
 }
 lastTime = millis();
 humidity_check();
 Fall_Detection();
 HEART_BEAT_MONITOR();
}
void humidity_check()
{
 tempC = HT.readTemperature();
 Humidity=HT.readHumidity();
 Serial.println("temperature="+String(tempC));
 Serial.println("humidity="+String(Humidity));
 lcd.clear();
 lcd.setCursor(0,0);
 lcd.print("HUMIDITY=");
 lcd.setCursor(9,0);
 lcd.print(Humidity);
 lcd.setCursor(0,1);
 lcd.print("TEMP=");
 lcd.setCursor(5,1);
 lcd.print(tempC);
 delay(1000);
 if(tempC>30)
 {
 Serial.println("$TEMPERATURE IS MORE#");
 lcd.clear();
 lcd.setCursor(0,0);
 lcd.print("TEMPERATURE");
 lcd.setCursor(9,0);
 lcd.print("IS MORE");
 digitalWrite(relay,HIGH);
 delay(3000); 
 digitalWrite(relay,LOW); 
 }
 }
void Fall_Detection()
{
 sensors_event_t event; 
accel.getEvent(&event);
 float X_val=event.acceleration.x;
 float Y_val=event.acceleration.y;
if((X_val<-7.50)||(X_val>7.5))
 {
 Serial.println("$Falldown#");
 lcd.clear();
 lcd.print("Falldown");
 delay(1000);
 }
 if((Y_val<-7.5)||(Y_val>7.5))
 {
 Serial.println("$Falldown#");
 lcd.clear();
 lcd.print("Falldown");
 delay(1000);
 }
// Init_spo2(); 
}
void HEART_BEAT_MONITOR()
{
 count=0;
 lcd.clear();
 lcd.setCursor(0,0);
 lcd.print("Place The Finger");
 lcd.setCursor(0,1);
 lcd.print("to check HB");
 Serial.println("Place The Finger to check HB");
 delay(2000);
// while(digitalRead(start)>0);
 temp=millis();
 while(millis()<(temp+5000))
 {
 if(analogRead(data)<100)
 {
  count=count+1;
 while(analogRead(data)<100);
 }
 }
 count=count*5;
 temp=0;
 delay(1000);
 lcd.clear();
 lcd.setCursor(0,0);
 lcd.print("HEART BEATS=");
 lcd.setCursor(0,1);
 lcd.print(count);
 Serial.print(count);
 Serial.println("");
 delay(1000);
 if(count>100)
 {
 Serial.println("$HEART BEAT IS MORE#");
 lcd.clear();
 lcd.setCursor(0,0);
 lcd.print("HEART BEAT");
 lcd.setCursor(0,1);
 lcd.print("IS MORE");
 delay(1000);
 }
}
